// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bernstein_copula_pdf
double bernstein_copula_pdf(double u, double v, const arma::mat& R);
RcppExport SEXP _BernsteinCopula_bernstein_copula_pdf(SEXP uSEXP, SEXP vSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(bernstein_copula_pdf(u, v, R));
    return rcpp_result_gen;
END_RCPP
}
// bernstein_emloop
List bernstein_emloop(const arma::vec& u, const arma::vec& v, arma::mat R_init, arma::mat tau_bar_init, List options);
RcppExport SEXP _BernsteinCopula_bernstein_emloop(SEXP uSEXP, SEXP vSEXP, SEXP R_initSEXP, SEXP tau_bar_initSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R_init(R_initSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau_bar_init(tau_bar_initSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(bernstein_emloop(u, v, R_init, tau_bar_init, options));
    return rcpp_result_gen;
END_RCPP
}
// bernstein_estep
double bernstein_estep(const arma::vec& u, const arma::vec& v, const arma::mat& R, arma::mat& tau);
RcppExport SEXP _BernsteinCopula_bernstein_estep(SEXP uSEXP, SEXP vSEXP, SEXP RSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type v(vSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(bernstein_estep(u, v, R, tau));
    return rcpp_result_gen;
END_RCPP
}
// bernstein_estep_with_weight
double bernstein_estep_with_weight(const arma::vec& u, const arma::vec& v, const arma::mat& R, arma::mat& tau, arma::vec& ew);
RcppExport SEXP _BernsteinCopula_bernstein_estep_with_weight(SEXP uSEXP, SEXP vSEXP, SEXP RSEXP, SEXP tauSEXP, SEXP ewSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type v(vSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type ew(ewSEXP);
    rcpp_result_gen = Rcpp::wrap(bernstein_estep_with_weight(u, v, R, tau, ew));
    return rcpp_result_gen;
END_RCPP
}
// dbinom_loader
NumericVector dbinom_loader(int n, double p);
RcppExport SEXP _BernsteinCopula_dbinom_loader(SEXP nSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(dbinom_loader(n, p));
    return rcpp_result_gen;
END_RCPP
}
// dbinom_loader_inplace
void dbinom_loader_inplace(int n, double p, NumericVector& P);
RcppExport SEXP _BernsteinCopula_dbinom_loader_inplace(SEXP nSEXP, SEXP pSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type P(PSEXP);
    dbinom_loader_inplace(n, p, P);
    return R_NilValue;
END_RCPP
}
// dou_mstep
arma::mat dou_mstep(const arma::mat& tau_bar, int maxiter, double tol);
RcppExport SEXP _BernsteinCopula_dou_mstep(SEXP tau_barSEXP, SEXP maxiterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type tau_bar(tau_barSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(dou_mstep(tau_bar, maxiter, tol));
    return rcpp_result_gen;
END_RCPP
}
// sinkhorn_scaling
arma::mat sinkhorn_scaling(const arma::mat& W, int maxiter, double tol);
RcppExport SEXP _BernsteinCopula_sinkhorn_scaling(SEXP WSEXP, SEXP maxiterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(sinkhorn_scaling(W, maxiter, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BernsteinCopula_bernstein_copula_pdf", (DL_FUNC) &_BernsteinCopula_bernstein_copula_pdf, 3},
    {"_BernsteinCopula_bernstein_emloop", (DL_FUNC) &_BernsteinCopula_bernstein_emloop, 5},
    {"_BernsteinCopula_bernstein_estep", (DL_FUNC) &_BernsteinCopula_bernstein_estep, 4},
    {"_BernsteinCopula_bernstein_estep_with_weight", (DL_FUNC) &_BernsteinCopula_bernstein_estep_with_weight, 5},
    {"_BernsteinCopula_dbinom_loader", (DL_FUNC) &_BernsteinCopula_dbinom_loader, 2},
    {"_BernsteinCopula_dbinom_loader_inplace", (DL_FUNC) &_BernsteinCopula_dbinom_loader_inplace, 3},
    {"_BernsteinCopula_dou_mstep", (DL_FUNC) &_BernsteinCopula_dou_mstep, 3},
    {"_BernsteinCopula_sinkhorn_scaling", (DL_FUNC) &_BernsteinCopula_sinkhorn_scaling, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_BernsteinCopula(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
